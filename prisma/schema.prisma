datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

/// user profile
model Profile {
  id            String      @id @default(uuid())
  createdAt     DateTime    @default(now())
  userId        String      @unique
  firstName     String
  lastName      String
  age           Int
  weight        Float
  height        Float
  activityLevel String

  FitnessGoal   FitnessGoal[]
  Workout       Workout[]
  Session       Session[]
  WorkoutPlan   WorkoutPlan[]

  @@map("profiles")
}

/// fitness goals
model FitnessGoal {
  id           String   @id @default(uuid())
  profile      Profile  @relation(fields: [profileId], references: [id])
  profileId    String
  goalType     String
  targetValue  Float
  createdAt    DateTime @default(now())

  @@map("fitness_goals")
}

/// workouts
model Workout {
  id           String   @id @default(uuid())
  profile      Profile  @relation(fields: [profileId], references: [id])
  profileId    String
  bodyPart     String
  exerciseName String
  sets         Int
  reps         Int
  createdAt    DateTime @default(now())

  @@map("workouts")
}

/// Weekly workout schedule per user
model WorkoutPlan {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  profile       Profile  @relation(fields: [profileId], references: [id])
  profileId     String
  dayOfWeek     Int      // 0=Sun, 1=Mon â€¦ 6=Sat
  bodyPart      String   // e.g. "Push", "Pull"
  repeatWeekly  Boolean  @default(false)
  createdAt     DateTime @default(now())

  @@unique([profileId, dayOfWeek])
  @@map("workout_plans")
}

/// gym sessions
model Session {
  id           String   @id @default(uuid())
  profile      Profile  @relation(fields: [profileId], references: [id])
  profileId    String
  date         DateTime
  sessionData  Json

  @@map("sessions")
}
